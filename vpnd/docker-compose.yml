version: "3.8"

##################
# VPND - // - Docker@home side
##################

services:

  swag:
    image: ghcr.io/linuxserver/swag
    container_name: swag
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - URL=$DOMAIN
      - SUBDOMAINS=wildcard
      - VALIDATION=dns
      - DNSPLUGIN=cloudflare
    volumes:
      - ./swag/config:/config
    network_mode: "service:wireguard"
    depends_on:
      - wireguard
    restart: unless-stopped

  wireguard:
    image: ghcr.io/linuxserver/wireguard
    container_name: wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - ./wireguard/config:/config
      - /lib/modules:/lib/modules
    ports:
      - 80:80
      - 443:443
      - 51820:51820/udp
    restart: unless-stopped

  rss:
    image: ghcr.io/linuxserver/freshrss
    container_name: rss
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - ./freshrss:/config
    restart: unless-stopped

  heimdall:
    image: ghcr.io/linuxserver/heimdall
    container_name: heimdall
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - ./heimdall:/config
    restart: unless-stopped

  library:
    image: ghcr.io/linuxserver/cops
    container_name: library
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - ./calibre/books:/books
      - ./calibre/config:/config
    restart: unless-stopped

  influxdb:
    image: influxdb:latest
    container_name: influxdb
    ports:
      - 8086:8086
    volumes:
      - ./influxdb:/var/lib/influxdb
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - 3000:3000
    volumes:
      - ./grafana:/var/lib/grafana
    restart: unless-stopped
    user: $PUID

  foundry:
    image: felddy/foundryvtt:release
    container_name: foundry
    hostname: foundry.spaceling.sh
    init: true
    restart: "unless-stopped"
    volumes:
      - ./foundry:/data
    environment:
      # - FOUNDRY_RELEASE_URL=$FOUNDRY_URL
      - CONTAINER_CACHE=/data/foundryvtt*.zip
      - TIMEZONE=$TZ
      - FOUNDRY_LICENSE_KEY=$FOUNDRY_KEY
      - FOUNDRY_ACCESS_KEY=$FOUNDRY_ACCESS